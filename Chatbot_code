import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

df = pd.read_csv("sentii.csv", encoding="latin1")

vectorizer = TfidfVectorizer()
context_vectors = vectorizer.fit_transform(df['Context'])

def chatbot_response(user_input):
    input_vector = vectorizer.transform([user_input])
    similarity_scores = cosine_similarity(input_vector, context_vectors).flatten()
    best_match_idx = similarity_scores.argmax()
    best_match_score = similarity_scores[best_match_idx]
    threshold = 0.1
    if best_match_score < threshold:
        return "I'm sorry, I didn't understand. Can you rephrase?"
    return df.iloc[best_match_idx]['Response']

print("\nChatbot is ready! Type 'exit' to end the chat.")
while True:
    user_input = input("You: ")
    if user_input.lower() == "exit":
        print("Chatbot: Goodbye!")
        break
    response = chatbot_response(user_input)
    print("Chatbot:", response)
